---
import Heading from '../../app/heading.astro';
import CardArq from '../../components/sections/card-arq.astro';
import Subtitle from '../../components/typography/subtitle.astro';
import Title from '../../components/typography/title.astro';
import Layout from '../../layout/layout.astro';
import { itemsArq as itemsArqData } from '../../constants/items';

export function getStaticPaths() {
  const uniqueTags = Array.from(
    new Set(itemsArqData.flatMap((item: { tags: string[] }) => item.tags))
  );

  return [
    { params: { tag: undefined }, props: { itemsArq: itemsArqData } },
    { params: { tag: 'todos' }, props: { itemsArq: itemsArqData } },

    ...uniqueTags.map((tag) => ({
      params: { tag: tag.toLowerCase() },
      props: { itemsArq: itemsArqData },
    })),
  ];
}

const { tag } = Astro.params;
const { itemsArq } = Astro.props;

const allTags = [
  'Todos',
  ...Array.from(new Set(itemsArq.flatMap((item: { tags: any }) => item.tags))),
];

const filteredItems =
  !tag || tag === 'todos'
    ? itemsArq
    : itemsArq.filter((item: { tags: any[] }) =>
        item.tags.some((itemTag: string) => itemTag.toLowerCase() === tag)
      );

const allTagsFormatted = allTags.map((tag) => ({
  name: tag,
  path: tag === 'Todos' ? '/projetos' : `/projetos/${tag.toLowerCase()}`,
}));

const activeTag = tag || 'todos';
---

<Layout>
  <section
    class="content-grid max-w-[1700px] mx-auto mt-10 space-y-12 px-4 py-10 text-zinc-700 md:mt-20 md:space-y-20 md:px-6 md:py-20 lg:px-0"
  >
    <div class="flex flex-col items-center space-y-4 text-center">
      <div class="flex items-center gap-4">
        <div class="h-12 w-12 bg-red-500 animate-colorBlock"></div>
        <div class="h-12 w-12 bg-orange-700 animate-colorBlock"></div>
      </div>
      <Heading class="animate-fadeIn">
        <Title class="text-2xl font-bold">Projetos</Title>
        <Subtitle class="text-lg">Feitos de forma Ãºnica</Subtitle>
      </Heading>
      <ul
        class="mt-6 flex flex-wrap items-center justify-center gap-3 md:gap-4 animate-fadeIn"
      >
        {
          allTagsFormatted.map((tagItem) => (
            <li>
              <a
                href={'/' + tagItem.path}
                class={`inline-flex items-center rounded px-3 py-1 text-sm transition-all duration-300 hover:cursor-pointer ${
                  (tagItem.name === 'Todos' && (!tag || tag === 'todos')) ||
                  tagItem.name.toLowerCase() === activeTag
                    ? 'bg-zinc-800 text-white'
                    : 'border border-zinc-200 bg-white hover:bg-zinc-100'
                }`}
              >
                {tagItem.name}
              </a>
            </li>
          ))
        }
      </ul>
    </div>

    <section
      class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3 animate-staggeredFadeIn"
    >
      {
        filteredItems.map(
          (item: {
            image: string;
            title: string;
            link: string;
            subtitle: string;
            tags: string[] | undefined;
          }) => (
            <CardArq
              image={item.image}
              title={item.title}
              link={item.link}
              subtitle={item.subtitle}
              tags={item.tags}
            />
          )
        )
      }
    </section>
  </section>
</Layout>
