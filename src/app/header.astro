---
const isHomePage = Astro.url.pathname === '/';
const currentPath = Astro.url.pathname.slice(1);

const headerTextColor = isHomePage ? 'text-white' : 'text-zinc-700';
const barColor = isHomePage ? 'bg-white' : 'bg-zinc-700';
const mobileMenuBg = isHomePage ? 'bg-zinc-800/95' : 'bg-white';
const mobileMenuTextColor = isHomePage ? 'text-white' : 'text-zinc-700';

const isLinkActive = (path: string) =>
  currentPath === path ? '!font-bold' : 'font-normal';
---

<header
  class:list={[
    'absolute top-0 left-1/2 z-30 w-full max-w-[1700px] -translate-x-1/2 px-4 md:px-8',
    isHomePage ? 'bg-transparent' : 'bg-white',
    headerTextColor,
  ]}
  id="main-header"
>
  <div
    class="mx-auto flex h-16 w-full max-w-[1700px] items-center justify-between text-lg"
  >
    <div class={`text-xl font-bold ${headerTextColor}`}>
      <a
        href="/"
        class={`font-bold hover:opacity-50 transition-all ${headerTextColor}`}
        >Nossa Arquitetura</a
      >
    </div>

    <nav class="hidden items-center space-x-8 md:flex lg:space-x-10">
      <a
        href="/sobre"
        class={`font-medium text-base md:text-lg hover:opacity-70 transition-opacity ${headerTextColor} ${isLinkActive('sobre')}`}
      >
        Sobre
      </a>
      <a
        href="/projetos"
        class={`font-medium text-base md:text-lg hover:opacity-70 transition-opacity ${headerTextColor} ${isLinkActive('projetos')}`}
      >
        Projetos
      </a>
      <a
        href="/contato"
        class={`font-medium text-base md:text-lg hover:opacity-70 transition-opacity ${headerTextColor} ${isLinkActive('contato')}`}
      >
        Contato
      </a>
    </nav>
    <button
      class="group relative z-50 flex h-10 w-10 items-center justify-center rounded md:hidden"
      aria-label="Toggle navigation menu"
      aria-expanded="false"
      aria-controls="mobile-menu"
      id="nav-toggle"
    >
      <span class="sr-only">Open main menu</span>
      <div class="flex h-3.5 w-6 flex-col justify-between">
        <span
          id="bar1"
          class:list={[
            'block h-0.5 w-full transform rounded-full transition-all duration-300 ease-in-out',
            barColor,
            'origin-right',
          ]}></span>
        <span
          id="bar2"
          class:list={[
            'block h-0.5 w-full transform rounded-full transition-opacity duration-300 ease-in-out',
            barColor,
          ]}></span>
        <span
          id="bar3"
          class:list={[
            'block h-0.5 w-full transform rounded-full transition-all duration-300 ease-in-out',
            barColor,
            'origin-right',
          ]}></span>
      </div>
    </button>
  </div>

  <div
    id="mobile-menu"
    class:list={[
      'fixed top-16 left-0 z-40 w-full transform overflow-hidden md:hidden',
      'transition-all duration-300 ease-in-out',
      mobileMenuBg,
      'invisible max-h-0 opacity-0',
    ]}
  >
    <div class="flex flex-col p-4 pt-2 pb-4">
      <a
        href="/sobre"
        class={`block font-medium text-lg py-3 ${mobileMenuTextColor} hover:opacity-70 transition-opacity ${isLinkActive('sobre')}`}
      >
        Sobre
      </a>
      <a
        href="/projetos"
        class={`block font-medium text-lg py-3 ${mobileMenuTextColor} hover:opacity-70 transition-opacity ${isLinkActive('projetos')}`}
      >
        Projetos
      </a>
      <a
        href="/contato"
        class={`block font-medium text-lg py-3 ${mobileMenuTextColor} hover:opacity-70 transition-opacity ${isLinkActive('contato')}`}
      >
        Contato
      </a>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const header = document.getElementById('main-header');
      const toggleButton = document.getElementById('nav-toggle');
      const mobileMenu = document.getElementById('mobile-menu');

      if (!toggleButton || !mobileMenu || !header) {
        console.error('Header elements not found!');
        return;
      }

      const toggleMenu = () => {
        const isActive = toggleButton.classList.contains('is-active');

        toggleButton.classList.toggle('is-active');
        toggleButton.setAttribute('aria-expanded', String(!isActive));

        if (!isActive) {
          mobileMenu.classList.remove('max-h-0', 'opacity-0', 'invisible');
          mobileMenu.classList.add(
            'max-h-[calc(100vh-4rem)]',
            'opacity-100',
            'visible',
            'border-t',
            'border-zinc-300/20',
            'shadow-lg'
          );
          if (
            header.classList.contains('text-white') &&
            header.classList.contains('bg-transparent')
          ) {
            header.classList.add('bg-zinc-800/95');
          }
        } else {
          mobileMenu.classList.add('max-h-0', 'opacity-0');
          setTimeout(() => {
            if (!toggleButton.classList.contains('is-active')) {
              mobileMenu.classList.add('invisible');
              mobileMenu.classList.remove('border-t', 'shadow-lg');
              if (header.classList.contains('text-white') && !window.scrollY) {
                header.classList.remove('bg-zinc-800/95');
              }
            }
          }, 300);
          mobileMenu.classList.remove(
            'max-h-[calc(100vh-4rem)]',
            'opacity-100',
            'visible'
          );
        }
      };

      toggleButton.addEventListener('click', (e) => {
        e.stopPropagation();
        toggleMenu();
      });

      const mobileLinks = mobileMenu.querySelectorAll('a');
      mobileLinks.forEach((link) => {
        link.addEventListener('click', () => {
          if (toggleButton.classList.contains('is-active')) {
            toggleMenu();
          }
        });
      });

      document.addEventListener('click', (e) => {
        if (
          toggleButton.classList.contains('is-active') &&
          !header.contains(e.target as Node)
        ) {
          toggleMenu();
        }
      });

      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && toggleButton.classList.contains('is-active')) {
          toggleMenu();
        }
      });

      let isScrolled = false;
      const isHomePage = Astro.url.pathname === '/';

      const checkScroll = () => {
        if (window.scrollY > 10 && !isScrolled) {
          isScrolled = true;
          if (header.classList.contains('bg-transparent')) {
            header.classList.add(isHomePage ? 'bg-zinc-800/95' : 'bg-white/95');
            header.classList.add('shadow-sm');
          }
        } else if (window.scrollY <= 10 && isScrolled) {
          isScrolled = false;
          if (!toggleButton.classList.contains('is-active')) {
            header.classList.remove(isHomePage ? 'bg-zinc-800/95' : 'bg-white/95');
            header.classList.remove('shadow-sm');
          }
        }
      };

      window.addEventListener('scroll', checkScroll);
      checkScroll();
    });
  </script>
</header>
